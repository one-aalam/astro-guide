---
export const prerender = true;
import { CollectionEntry, getCollection, render } from 'astro:content'
import ChapterPageLayout from '$/layouts/chapter.astro'

export async function getStaticPaths({ paginate, rss }) {
    const allGuides = await getCollection('guide')
    const allChapters = await getCollection('chapter')

  const allChaptersByGuides = allChapters.map((chapter: CollectionEntry<'chapter'>) => {
        const [ guideSlug, _, chapterSlug ] = chapter.id.split('/');
    return {
                ...chapter,
                guide: {
                    slug: guideSlug,
                    chapterSlug: chapterSlug
                },
    }}).reduce((prev, current) => {
        return {
            ...prev,
            [current.guide.slug]: prev[current.guide.slug] ? [ ...prev[current.guide.slug], current ] : [ current ]
        }
    }, {})

    const allGuidesBySlug =  allGuides.reduce((prev, current) => {
        return {
            ...prev,
            [current.id]: current
        }
    }, {})

    return Array.from(allChapters).map((chapter: CollectionEntry<'chapter'>) => {
        const [ guideSlug, _, chapterSlug ] = chapter.id.split('/');
        return {
            params: { clug: chapterSlug, slug: guideSlug },
            props: {
                chapter,
                chapters: allChaptersByGuides[guideSlug],
                guide: allGuidesBySlug[guideSlug]
            }
        };
    });
}

const { chapter, chapters, guide } = Astro.props
const { Content, headings } = await render(chapter);
---
<ChapterPageLayout chapter={chapter} chapters={chapters} guide={guide} headings={headings}>
    <Content />
</ChapterPageLayout>
